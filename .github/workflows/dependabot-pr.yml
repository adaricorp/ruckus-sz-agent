---
name: Dependabot PR check

on: pull_request_target

jobs:
  goreleaser:
    name: Build with goreleaser
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: "${{ github.event.pull_request.head.sha }}"

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Generate GitHub app token
        id: github-app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: adaricorp

      - name: Configure git authentication
        run: |
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=publish --snapshot

      - name: Upload build artifacts
        uses: actions/upload-artifact@v5
        with:
          name: ruckus-sz-agent
          path: dist/

  codechecks:
    name: Code checks
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          ref: "${{ github.event.pull_request.head.sha }}"

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Generate GitHub app token
        id: github-app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: adaricorp

      - name: Configure git authentication
        run: |
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"

      - name: Bootstrap
        run: ./boot.sh

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          only-new-issues: true

      - name: Govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: ""
          check-latest: true
          go-version-file: "go.mod"
          cache: false
          repo-checkout: false

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: go
          build-mode: autobuild

      - name: Generate GitHub app token
        id: github-app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: adaricorp

      - name: Configure git authentication
        run: |
          git config --global url."https://x-access-token:${{ steps.github-app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:go"
